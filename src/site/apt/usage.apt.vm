 ------
 Usage
 ------
 Pino Silvaggio
 ------
 2011-11-17
 ------

 ~~ Licensed to the Apache Software Foundation (ASF) under one
 ~~ or more contributor license agreements.  See the NOTICE file
 ~~ distributed with this work for additional information
 ~~ regarding copyright ownership.  The ASF licenses this file
 ~~ to you under the Apache License, Version 2.0 (the
 ~~ "License"); you may not use this file except in compliance
 ~~ with the License.  You may obtain a copy of the License at
 ~~
 ~~   http://www.apache.org/licenses/LICENSE-2.0
 ~~
 ~~ Unless required by applicable law or agreed to in writing,
 ~~ software distributed under the License is distributed on an
 ~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~~ KIND, either express or implied.  See the License for the
 ~~ specific language governing permissions and limitations
 ~~ under the License.

 ~~ NOTE: For help with the syntax of this file, see:
 ~~ http://maven.apache.org/doxia/references/apt-format.html

Usage

  Some brief examples on how to use this plugin.


* How to set a property which value is the absolute path to the artifact file for each selected project dependency (including transitive)

  i.e.: This does the same thing as the dependency:properties goal.

+-----------------+
<plugin>
    <groupId>org.bitstrings.maven.plugins</groupId>
    <artifactId>dependencypath-maven-plugin</artifactId>
    <version>${project.version}</version>
    <executions>
        <execution>
            <id>set-all</id>
            <goals>
                <goal>set</goal>
            </goals>
        </execution>
    </executions>
</plugin>
+-----------------+

  This will for example create a property like junit:junit:jar and commons-lang:commons-lang:jar.


* How to include/exclude dependencies

  Specify a list of dependencies to be included or excluded by adding
  <<<\<includes\>>>>/<<<\<include\>>>> or <<<\<excludes\>>>>/<<<\<exclude\>>>>
  in your pom.xml.

+-----------------+
<plugin>
    <groupId>org.bitstrings.maven.plugins</groupId>
    <artifactId>dependencypath-maven-plugin</artifactId>
    <version>${project.version}</version>
    <executions>
        <execution>
            <id>set-all</id>
            <goals>
                <goal>set</goal>
            </goals>
        </execution>
        <configuration>
            <propertySets>
                <propertySet>
                    <includes>
                        <include>junit:junit:jar</include>
                        <include>org.apache.maven:maven-core:jar</include>
                    </includes>
                </propertySet>
            </propertySets>
        </configuration>
    </executions>
</plugin>
+-----------------+


* How to set a property which value a relative path to the artifact file for each selected project dependency (excluding transitive)

  Use the <<<relativeTo>>> parameter to base your relative path on. This will also
  automatically append ".relative" to the property name.
  If you do not want to include transitive dependencies just
  set the <<<transitive>>> parameter to false.
  Further more, you can set <<<suffix>>> which will append a suffix
  to the parameter name, in this case ".builddir".

+-----------------+
<plugin>
    <groupId>org.bitstrings.maven.plugins</groupId>
    <artifactId>dependencypath-maven-plugin</artifactId>
    <version>${project.version}</version>
    <executions>
        <execution>
            <id>set-relative-builddir</id>
            <goals>
                <goal>set</goal>
            </goals>
            <configuration>
                <propertySets>
                    <propertySet>
                        <suffix>builddir</suffix>
                        <relativeTo>\${project.build.directory}</relativeTo>
                        <transitive>false</transitive>
                    </propertySet>
                </propertySets>
            </configuration>
        </execution>
    </executions>
</plugin>
+-----------------+

  This will for example create a property like junit:junit:jar.relative.builddir
  and commons-lang:commons-lang:jar.relative.builddir.


* How to disable the automatic ".relative" suffix

  Set the <<<autoRelativeSuffix>>> to false, this will not add
  the ".relative" suffix to the property name.

+-----------------+
<plugin>
    <groupId>org.bitstrings.maven.plugins</groupId>
    <artifactId>dependencypath-maven-plugin</artifactId>
    <version>${project.version}</version>
    <executions>
        <execution>
            <id>set-relative-builddir</id>
            <goals>
                <goal>set</goal>
            </goals>
            <configuration>
                <propertySets>
                    <propertySet>
                        <suffix>builddir</suffix>
                        <relativeTo>\${project.build.directory}</relativeTo>
                        <transitive>false</transitive>
                        <autoRelativeSuffix>false</autoRelativeSuffix>
                    </propertySet>
                </propertySets>
            </configuration>
        </execution>
    </executions>
</plugin>
+-----------------+

  This will for example create a property like junit:junit:jar.builddir
  and commons-lang:commons-lang:jar.builddir.


  For full documentation, click {{{./plugin-info.html}here}}.
